/**
 * LIBRER√çA DE ALMACENAMIENTO (store.js)
 * Maneja la cach√© de la sesi√≥n y los datos de mensajes para Baileys.
 */
import { makeInMemoryStore } from '@whiskeysockets/baileys'

// Usamos makeInMemoryStore para almacenar datos de la sesi√≥n en RAM.
// Esto mejora el rendimiento y la capacidad de respuesta del bot,
// especialmente con mensajes citados y mensajes en grupo.
const store = makeInMemoryStore({})

// Conectamos el store a los eventos del conector (global.conn)
// para que guarde autom√°ticamente los datos de la sesi√≥n.
export const connect = (conn) => {
    store.bind(conn.ev)
}

export default store

// NOTA: Esta versi√≥n usa la cach√© de mensajes directamente de Baileys.
// Si tu index.js lo importa, deber√≠a buscar funciones como loadMessage().
```eof

---

## üõ†Ô∏è Actualizaci√≥n de `index.js` (Final)

Tu **`index.js`** debe ser ligeramente modificado para usar la funci√≥n `connect(conn)` que acabamos de agregar a `store.js`. Esto asegura que la cach√© de mensajes est√© activa.

Solo tienes que modificar una secci√≥n en la parte superior.

**Reemplaza las importaciones de `store` y `mongoDB` en `index.js` con estas l√≠neas:**

```javascript
// ... (l√≠neas anteriores de importaci√≥n)

import { makeWASocket, protoType, serialize } from './lib/simple.js'
// import { Low, JSONFile } from 'lowdb' // Ya est√° importado antes
// import { mongoDB, mongoDBV2 } from './lib/mongoDB.js' // ‚¨ÖÔ∏è Eliminado
import store, { connect } from './lib/store.js' // ‚¨ÖÔ∏è L√çNEA MODIFICADA (importa store y connect)

const { proto } = (await import('@whiskeysockets/baileys')).default

// ... (resto de las importaciones)