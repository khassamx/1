/**
 * Plugin: !ig - Descarga contenido de Instagram
 * Autor: Itsuki-IA Adaptado por Keko
 */

import dyluxApi from 'api-dylux'

const plugin = {
  name: "!ig",

  async run(sock, m, from, args) {
    if (!args[0]) {
      return sock.sendMessage(from, {
        text: "üëë SAIYAJIN, necesito un enlace de Instagram para descargar. Usa: `!ig [enlace]`."
      }, { quoted: m })
    }

    const url = args[0].trim()

    // Validaci√≥n de URL flexible: p, reel, tv, stories o perfil
    if (!/instagram\.com\/(p|reel|tv|stories|explore\/tags|[^\/]+)\/?[\w-]*/i.test(url)) {
      return sock.sendMessage(from, {
        text: "‚ùå El enlace no parece ser v√°lido o el formato no es soportado."
      }, { quoted: m })
    }

    await sock.sendMessage(from, { text: "‚è≥ Analizando la publicaci√≥n de Instagram... ¬°Prep√°rate para la descarga!" }, { quoted: m })

    try {
      // Usamos api-dylux
      const res = await dyluxApi.igdl(url)
      if (!res || res.length === 0) {
        return sock.sendMessage(from, {
          text: "‚ùå No se pudo descargar el contenido. Aseg√∫rate de que la publicaci√≥n sea p√∫blica y el enlace est√© completo."
        }, { quoted: m })
      }

      // Aseguramos que siempre sea array
      const mediaList = Array.isArray(res) ? res : [res]
      let sentCount = 0

      for (let i = 0; i < mediaList.length; i++) {
        const media = mediaList[i]
        const isVideo = media.type === 'video'
        const mediaKey = isVideo ? 'video' : 'image'
        const caption = mediaList.length > 1
          ? `üî• Carrusel detectado: elemento ${i + 1} de ${mediaList.length}`
          : `‚úÖ Descarga completada, SAIYAJIN.`

        await sock.sendMessage(from, {
          [mediaKey]: { url: media.url },
          caption,
          mimetype: isVideo ? 'video/mp4' : 'image/jpeg',
        }, { quoted: m })

        sentCount++
        if (mediaList.length > 1) await new Promise(res => setTimeout(res, 800))
      }

      if (sentCount > 1) {
        await sock.sendMessage(from, {
          text: `üëë Se han enviado ${sentCount} elementos del carrusel.`
        }, { quoted: m })
      }

    } catch (e) {
      console.error("‚ùå Error en !ig:", e)
      await sock.sendMessage(from, {
        text: `‚ö†Ô∏è Error al procesar el enlace. Puede que la API est√© ca√≠da, el contenido sea privado o el enlace inv√°lido.\nDetalles: ${e.message}`
      }, { quoted: m })
    }
  }
}

export default plugin